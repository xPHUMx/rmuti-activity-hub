
// import "./globals.css";
// import { IBM_Plex_Sans_Thai } from "next/font/google";
// import AuthProvider from "./context/AuthProvider";
// import Chatbot from "@/components/Chatbot";

// const ibmPlexThai = IBM_Plex_Sans_Thai({
//   subsets: ["thai", "latin"],
//   weight: ["400", "700"],
//   display: "swap", // ‚úÖ ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏°‡∏≤‡∏Å ‡∏ü‡∏≠‡∏ô‡∏ï‡πå‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏ö‡∏ñ‡∏∂‡∏á‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á
// });

// export const metadata = {
//   title: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode;
// }) {
//   return (
//     <html lang="th">
//       <body className={ibmPlexThai.className}>
//         <AuthProvider>
//           {children}
//           <Chatbot /> {/* üëà ‡πÄ‡∏û‡∏¥‡πà‡∏° chatbot ‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ */}
//         </AuthProvider>
//       </body>
//     </html>
//   );
// }

import "./globals.css";
import { IBM_Plex_Sans_Thai } from "next/font/google";
import { usePathname } from "next/navigation";
import AuthProvider from "./context/AuthProvider";
import Chatbot from "@/components/Chatbot";
import AdminButton from "@/components/AdminButton";
import VersionBadge from "@/components/VersionBadge";

const ibmPlexThai = IBM_Plex_Sans_Thai({
  subsets: ["thai", "latin"],
  weight: ["400", "700"],
  display: "swap",
});

export const metadata = {
  title: "‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const pathname = typeof window !== "undefined" ? window.location.pathname : "";

  return (
    <html lang="th">
      <body className={ibmPlexThai.className}>
        <AuthProvider>
          {children}
          {pathname !== "/login" && (
            <>
              <VersionBadge />
              <Chatbot />
            </>
          )}
          <AdminButton />
        </AuthProvider>
      </body>
    </html>
  );
}