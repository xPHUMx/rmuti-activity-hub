// import { NextResponse } from "next/server";
// import connectToDatabase from "@/utils/db";
// import User from "@/models/User";

// // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
// export async function GET(req: Request, { params }: { params: { id: string } }) {
//   await connectToDatabase();
  
//   console.log("üü° API received request for ID:", params.id); // ‚úÖ Debug

//   const user = await User.findById(params.id);
//   if (!user) {
//     console.log("üî¥ User not found in DB");
//     return NextResponse.json({ error: "User not found" }, { status: 404 });
//   }

//   console.log("üü¢ User found:", user);
//   return NextResponse.json(user);
// }

// import { NextResponse } from "next/server";
// import connectToDatabase from "@/utils/db";
// import User from "@/models/User";
// import mongoose from "mongoose";

// // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•
// export async function GET(req: Request, context: { params: { id: string } }) {
//   await connectToDatabase();

//   const { id } = context.params; // ‡πÉ‡∏ä‡πâ params ‡∏à‡∏≤‡∏Å context

//   // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ id ‡πÄ‡∏õ‡πá‡∏ô ObjectId ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
//   if (!mongoose.Types.ObjectId.isValid(id)) {
//     return NextResponse.json({ error: "Invalid ID format" }, { status: 400 });
//   }

//   try {
//     const user = await User.findById(id); // ‡πÉ‡∏ä‡πâ Mongoose ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ï‡∏≤‡∏° ID
//     if (!user) {
//       return NextResponse.json({ error: "User not found" }, { status: 404 });
//     }

//     return NextResponse.json(user); // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡∏±‡∏ö
//   } catch (error) {
//     console.error("Error retrieving user:", error);
//     return NextResponse.json({ error: "Failed to retrieve user data" }, { status: 500 });
//   }
// }


import { NextRequest, NextResponse } from "next/server";
import connectToDatabase from "@/utils/db";
import User from "@/models/User";

export async function GET(
  req: NextRequest,
  context: { params: Promise<{ id: string }> } // ‚úÖ ‡πÉ‡∏ä‡πâ Promise
) {
  await connectToDatabase();

  try {
    const { id } = await context.params; // ‚úÖ ‡πÉ‡∏ä‡πâ await ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ params

    console.log("üü° API received request for ID:", id);

    const user = await User.findById(id);
    if (!user) {
      console.log("üî¥ User not found in DB");
      return NextResponse.json({ error: "User not found" }, { status: 404 });
    }

    console.log("üü¢ User found:", user);
    return NextResponse.json(user);
  } catch (error) {
    console.error("üî¥ Error:", error);
    return NextResponse.json({ error: "An error occurred" }, { status: 500 });
  }
}
